openapi: 3.0.3
info:
  title: Swagger ValuedIn - OpenAPI 3.0
  description: Software Architecture course - Restful API design by JMNTS22 student group.
  contact:
    email: jmnts22@gmail.com
  version: 1.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/iramasauskas/ValuedIn/1.0.0
  - url: https://valuedin.swagger.io/api/v3
tags:
  - name: auth
    description: Operations to manage user credentials
  - name: users
    description: Operations to manage users
  - name: organizations
    description: Operations to manage organizations
  - name: values
    description: Operations to manage values
  - name: jobs
    description: Operations to manage jobs
  - name: chats
    description: Operations to manage chats
  - name: feed
    description: Operations to manage feed
paths:
# User credentials

  /auth:
    get:
      tags:
      - auth
      summary: Check authentication
      description: Check authentication
      operationId: checkAuth
      responses:
        '200':
          description: Success
        '404':
          description: Incorrect data provided
                
  /auth/registration:
    post:
      tags:
      - auth
      summary: Register User account
      description: Register User account
      operationId: regUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewUser"
      responses:
        '200':
          description: Success  
        '404':
          description: Incorrect data provided      
        
        
  /auth/sys/registration:
    post:
      tags:
      - auth
      summary: Register User account for System Admin
      description: Register User account for System Admin
      operationId: regSysUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewUser"
      responses:
        '200':
          description: Success
        '404':
          description: Incorrect data provided
          
  /auth/login:
    post:
      tags:
      - auth
      summary: Login by user
      description: Login by user
      operationId: logUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AuthRequest"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenAndRole"
        '404':
          description: Incorrect data provided
                
  /auth/passwordreset:
    post:
      tags:
        - auth
      summary: Reset password
      description: Reset the password for the user
      operationId: resetPass
      responses:
        '200':
          description: Success  
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
      - valuedIn_auth:
          - write:users  
          - read:users
          
  /auth/passwordchange:
    post:
      tags:
        - auth
      summary: Change password
      description: This can only be done by the logged in user.
      operationId: changePass       
      responses:
        '200':
          description: Success
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
      - valuedIn_auth:
          - write:users  
          - read:users
          
# User management
          
  /users:
    get:
      tags:
      - users
      summary: List all Users
      description: This can only be done by the logged in user.
      operationId: listUsers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserSystemInfoPage"
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
      - valuedIn_auth:
          - read:users  
                
  /users/feed:
    get:
      tags:
        - users
      summary: List all Feed elements of Users
      description: This can only be done by the logged in user.
      operationId: listFeedUsers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
        '404':
          description: Incorrect data provided
      security:
        - api_key: []
               
  /users/{id}:
    get:
      tags:
      - users
      summary: View User
      description: This can only be done by the logged in user.
      operationId: viewUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserSystemInfo"
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - read:users  
    put:
      tags:
      - users
      summary: Update User
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatedUser"
      responses:
        '200':
          description: Success
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - write:users
            - read:users  
         
  /users/{id}/cv:
    post:
      tags:
        - users
      summary: Upload CV for User
      description: This can only be done by the logged in user.
      operationId: uploadCV
      parameters:
        - name: id
          in: path
          description: ID of user to update
          required: true
          schema:
            type: integer
            format: int64
        - name: additionalMetadata
          in: query
          description: Additional Metadata
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - write:users
            - read:users    
            
  /users/sys/{id}:
    put:
      tags:
      - users
      summary: Update User (for sys admin)
      description: This can only be done by the logged in user.
      operationId: updateUserSys
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatedUser"
      responses:
        '200':
          description: Success
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - write:users
            - read:users  
    delete:
      tags:
        - users
      summary: Expire User
      description: Expire User by ID
      operationId: expireUser
      parameters:
      - name: id
        in: path
        description: ID of user to expire
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - write:users
            - read:users  
      
# Organizations management
          
  /organizations:
    get:
      tags:
        - organizations
      summary: List all Organizations
      description: List all Organizations
      operationId: listOrg
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
        '404':
          description: Incorrect data provided
      security:
        - api_key: []  
    
    post:
      tags:
        - organizations
      summary: Add a new organization to the social network
      description: Add a new organization to the social network
      operationId: createOrg
      requestBody:
        description: Create a new organization in the social network
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - write:organizations
            - read:organizations     
        
  /organizations/feed:
    get:
      tags:
        - organizations
      summary: List all Feed elements of Organizations
      description: List all Feed elements of Organizations
      operationId: listFeedOrg
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
        '404':
          description: Incorrect data provided
      security:
        - api_key: []  
  
            
  /organizations/{id}:
    get:
      tags:
        - organizations
      summary: Find organization by ID
      description: Returns a single organization
      operationId: viewOrg
      parameters:
        - name: id
          in: path
          description: ID of organization to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - write:organizations
            - read:organizations 
    put:
      tags:
        - organizations
      summary: Update Organization
      description: Update an existing organization by Id
      operationId: updateOrg
      parameters:
        - name: id
          in: path
          description: ID of organization to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existent organization in social network 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'          
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - write:organizations
            - read:organizations  
    delete:
      tags:
        - organizations
      summary: Archive Organization
      description: Archive an existent organization in social
      operationId: archiveOrg
      parameters:
        - name: id
          in: path
          description: ID of organization to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'          
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - write:organizations
            - read:organizations  

  /organizations/{id}/employees:
    post:
      tags:
        - organizations
      summary: List all Organization Employees
      description: List all Organization Employees
      operationId: listOrgEmp
      parameters:
        - name: id
          in: path
          description: ID of organization to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Provide required page number and filter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginatedDataRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'          
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - read:employees 
    
  /organizations/{id}/valuehistory:
    post:
      tags:
        - organizations
      summary: View Organization Value history
      description: This can only be done by the logged in user.
      operationId: viewValueHis
      parameters:
        - name: id
          in: path
          description: ID of organization to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Provide required page number and filter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginatedDataRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - write:organizations
            - read:organizations

  /organizations/{id}/jobs:
    post:
      tags:
        - organizations
      summary: View Organization Jobs
      description: View Organization Jobs
      operationId: viewOrgJob
      parameters:
        - name: id
          in: path
          description: ID of organization to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'          
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - write:organizations
            - read:organizations
            - read:jobs
            
  /organizations/request:
    post:
      tags:
        - organizations
      summary: Request new Company Registration
      description: Request new Company Registration
      operationId: requestReg
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - write:organizations
            - read:organizations  
      
# Value management

  /values:
    get:
      tags:
        - values
      summary: List all Values
      description: List all existing values
      operationId: listValues
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32  
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - read:values  
    put:
      tags:
        - values
      summary: Update Value
      description: Update an existent value in social network
      operationId: updateValues
      requestBody:
        description: Update an existent value in social network 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Value'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Organization not found
      security:
        - valuedIn_auth:
            - write:values
            - read:values  
    post:
      tags:
        - values
      summary: Create new Value for Sys Admin
      description: This can only be done by system admin.
      operationId: sysCreateValue
      requestBody:
        description: Create a new value in the social network
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Value'
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - write:values
            - read:values 
            
    delete:
      tags:
        - values
      summary: Archive Value
      description: This can only be done by the System Admin.
      operationId: archValue
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Value'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Value'
        '400':
          description: Invalid ID supplied
        '404':
          description: Organization not found
        '405':
          description: Validation exception
      security:
        - valuedIn_auth:
            - write:values
            - read:values 
            
# Job management

  /jobs:
    get:
      tags:
        - jobs
      summary: List all Jobs
      description: List all existing jobs
      operationId: listJobs
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32 
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
      - valuedIn_auth:
          - read:jobs

  /jobs/feed:
    get:
      tags:
        - jobs
      summary: List all Feed elements of Jobs
      description: This can only be done by the logged in user.
      operationId: listFeedJobs
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32 
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
      - valuedIn_auth:
          - read:jobs
  
  /jobs/{id}:
    post:
      tags:
        - jobs
      summary: Create new Job
      description: This can only be done by HR role.
      operationId: createJob
      parameters:
        - name: id
          in: path
          description: ID of organization where job will be created
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Create a new job in the social network
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'          
        '403':
          description: Unauthenticated user
        '404':
          description: Job not found
      security:
        - valuedIn_auth:
            - write:jobs
            - read:jobs
    get:
      tags:
        - jobs
      summary: View Job
      description: This can only be done by the logged in user.
      operationId: viewJob
      parameters:
        - name: id
          in: path
          description: ID of job to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '403':
          description: Unauthenticated user
        '404':
          description: Job not found
      security:
        - api_key: []
        - valuedIn_auth:
            - read:jobs 
    put:
      tags:
        - jobs
      summary: Update Job
      description: This can only be done by the logged in user.
      operationId: updateJob
      parameters:
        - name: id
          in: path
          description: ID of job to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existent job in social network 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '403':
          description: Unauthenticated user
        '404':
          description: Job not found
      security:
        - valuedIn_auth:
            - write:jobs
            - read:jobs

    delete:
      tags:
        - jobs
      summary: Archive Job
      description: This can only be done by the logged in user.
      operationId: archJob
      parameters:
        - name: id
          in: path
          description: ID of job to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'          
        '403':
          description: Unauthenticated user
        '404':
          description: Job not found
      security:
        - valuedIn_auth:
            - write:jobs
            - read:jobs   

  /jobs/{id}/application:
    post:
      tags:
        - jobs
      summary: Apply to Job
      description: This can only be done by the logged in user.
      operationId: applyJob
      parameters:
        - name: id
          in: path
          description: ID of job to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'          
        '403':
          description: Unauthenticated user
        '404':
          description: Job not found
      security:
        - valuedIn_auth:
            - write:jobs
            - read:jobs  

  /jobs/{id}/bookmark:
    post:
      tags:
        - jobs
      summary: Bookmark Job
      description: This can only be done by the logged in user.
      operationId: bookJob
      parameters:
        - name: id
          in: path
          description: ID of job to bookmark
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '403':
          description: Unauthenticated user
        '404':
          description: Job not found
      security:
        - valuedIn_auth:
            - write:jobs
            - read:jobs  

  /jobs/{id}/applicants:
    get:
      tags:
        - jobs
      summary: View applicants to Job
      description: This can only be done by the logged in user.
      operationId: viewAppJob
      parameters:
        - name: id
          in: path
          description: ID of job to return applicants
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applicant'
        '403':
          description: Unauthenticated user
        '404':
          description: Applicant not found
      security:
        - valuedIn_auth:
            - read:applicants  
            
# Chat management

  /ws:
    get:
      tags:
        - chats
      summary: Establish Web Socket
      description: Establish Web Socket
      operationId: webSocket
      responses:
        '200':
          description: Success  
        '403':
          description: Unauthenticated user

  /chats:
    get:
      tags:
        - chats
      summary: List all Chats
      description: This can only be done by the logged in user.
      operationId: listChats
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32 
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
    post:
      tags:
        - chats
      summary: Create Chat
      description: This can only be done by the logged in user.
      operationId: createChat
      requestBody:
        description: Provide chat content
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chat'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'          
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - write:chats
            - read:chats       

  /chats/{id}:
    get:
      tags:
        - chats
      summary: View Chat
      description: This can only be done by the logged in user.
      operationId: viewChat
      parameters:
        - name: id
          in: path
          description: ID of organization to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'          
        '403':
          description: Unauthenticated user
        '404':
          description: Chat not found
      security:
        - valuedIn_auth:
            - write:chats
            - read:chats 

  /chats/message:
    post:
      tags:
        - chats
      summary: Create a Message in Chat
      description: This can only be done by the logged in user.
      operationId: createMsg
      requestBody:
        description: Provide message content
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'          
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - write:messages
            - read:messages
          
# Feed management

  /feed:
    get:
      tags:
        - feed
      summary: List all Feed elements
      description: This can only be done by the logged in user.
      operationId: listFeed
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'          
        '403':
          description: Unauthenticated user
        '404':
          description: Incorrect data provided
      security:
        - valuedIn_auth:
            - read:feeds  

components:
  schemas:
    AuthRequest:
      type: object
      properties:
        login:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        rememberMe:
          type: boolean
      additionalProperties: false
    NewUser:
      type: object
      properties:
        login:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
      additionalProperties: false
    OrderByColumn:
      type: object
      properties:
        column:
          type: string
          nullable: true
        ascending:
          type: boolean
      additionalProperties: false
    TokenAndRole:
      type: object
      properties:
        token:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
      additionalProperties: false
    UpdatedUser:
      type: object
      properties:
        userID:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
      additionalProperties: false
    UserPageRequest:
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        orderByColumns:
          type: array
          items:
            "$ref": "#/components/schemas/OrderByColumn"
          nullable: true
        showExpired:
          type: boolean
      additionalProperties: false
    UserSystemInfo:
      type: object
      properties:
        login:
          type: string
          nullable: true
        userID:
          type: string
          nullable: true
        isExpired:
          type: boolean
        lastActive:
          type: string
          format: date-time
          nullable: true
        role:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
      additionalProperties: false
    UserSystemInfoPage:
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/UserSystemInfo"
          nullable: true
        total:
          type: integer
          format: int32
        pageNo:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    Organization:
      required:
        - title
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        banner:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: banner  
        title:          
          type: string
          example: BarberShop
        city:
          type: string
          example: Bakersfield, CA
        values:
          type: string
          example: [Honesty, Communication, Extrovert, Artistic]
        match:
          type: integer
          format: int64
          example: 12
        description:
          type: string
          example: Classic Barbershop for Your needs
        owner:
          type: string
          example: James Kameron
        positions:
          type: string
          example: Barber
        employeeValues:
          type: string
          example: [Extrovert, Honest, Forth-coming]
      xml:
        name: organization
    Value:
      required:
        - name
      type: object
      properties:  
        name:
          type: string
          example: Honesty 
      xml:
        name: value    
    Job:
      required:
        - title
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        avatar:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: avatar  
        title:
          type: string
          example: Barber in BarberShop
        tags:
          type: string
          example: [Barber, fulltime]
        values:
          type: string
          example: [Openness, Extrovert, Empathic, Social]
        match:
          type: integer
          format: int64
          example: 54
      xml:
        name: job
    Chat:
      required:
        - contact
      type: object
      properties:
        contact:
          type: string
          example: Michael Scott
      xml:
        name: chat    
    Message:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: Jack Black
        sentTime:
          type: string
          example: 2001/01/01
        isAuthor:
          type: boolean
          example: True
        messageContent:
          type: string
          example: Lorem Ipsum
      xml:
        name: message
    Employee:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: Jack Black
        position:
          type: string
          example: Finance specialist
        organization:
          type: string
          example: SwedBank
    PaginatedDataRequest:
      required:
          - page
          - filter
      type: object
      properties:
        page:          
          type: object
          example: 3
        filter:
          type: string
          example: "ColumnName = 'Example Filter Text'"
    Applicant:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: Jack Black
        education:
          type: string
          example: Klaipeda University
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
    Feed:
      type: object
      properties:
        type:
          type: integer
          format: int8
        page:
          type: object
  securitySchemes:
    valuedIn_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://valuedin.com/auth/login
          scopes:
            write:messages: modify messages
            read:messages: read messages
            read:feeds: read feeds
            write:chats: modify chats
            read:chats: read chats
            write:applicants: modify applicants
            read:applicants: read applicants
            write:jobs: modify jobs
            read:jobs: read jobs
            write:values: modify values
            read:values: read values
            write:organizations: modify organizations
            read:organizations: read organizations
            write:users: modify users
            read:users: read users
    api_key:
      type: apiKey
      name: jwt_token
      in: header
